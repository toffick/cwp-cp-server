warning: LF will be replaced by CRLF in package.json.
The file will have its original line endings in your working directory
[1mdiff --git a/appManager.js b/appManager.js[m
[1mindex 88ca762..8705ccb 100644[m
[1m--- a/appManager.js[m
[1m+++ b/appManager.js[m
[36m@@ -5,11 +5,13 @@[m [mconst morgan = require('morgan');[m
 const session = require('express-session');[m
 const cors = require('cors');[m
 const path = require('path');[m
[32m+[m[32mconst cookieParser = require('cookie-parser');[m
 [m
 module.exports = (container) => {[m
 	const app = express();[m
 [m
 	app.use(morgan('tiny'));[m
[32m+[m	[32mapp.use(cookieParser());[m
 	app.use(bodyParser.json());[m
 	app.use(session({[m
 		secret: config.session.key,[m
[36m@@ -39,6 +41,7 @@[m [mmodule.exports = (container) => {[m
 	app.use(container.resolve('authenticatorGlobal'));[m
 	app.use(container.resolve('authorizationGlobal'));[m
 	app.use(container.resolve('cacheGlobal'));[m
[32m+[m	[32m// app.use(container.resolve('statisticsGlobal'));[m
 	app.use('/api/v1', container.resolve('apiController'));[m
 	app.use(container.resolve('errorGlobal'));[m
 [m
[1mdiff --git a/config/default.json b/config/default.json[m
[1mindex 2cb9bbf..d034eed 100644[m
[1m--- a/config/default.json[m
[1m+++ b/config/default.json[m
[36m@@ -23,5 +23,6 @@[m
       "user": "kin4ikrating@gmail.com",[m
       "pass": "qf2BzWoGTIBToQbu"[m
     }[m
[31m-  }[m
[32m+[m[32m  },[m
[32m+[m[32m  "recommendationsUpdateTimeout": 1800[m
 }[m
[1mdiff --git a/config/development.json b/config/development.json[m
[1mindex a9c8008..f28f9d9 100644[m
[1m--- a/config/development.json[m
[1m+++ b/config/development.json[m
[36m@@ -33,7 +33,6 @@[m
       "freezeTableName": true,[m
       "logging": true,[m
       "define": {[m
[31m-        "timestamps": false,[m
         "paranoid": false,[m
         "freezeTableName": true[m
       }[m
[1mdiff --git a/controllers/auth.controller.js b/controllers/auth.controller.js[m
[1mindex 165116b..8ec2001 100644[m
[1m--- a/controllers/auth.controller.js[m
[1m+++ b/controllers/auth.controller.js[m
[36m@@ -4,7 +4,7 @@[m [mconst sender = require('../helpers/sender.helper');[m
 [m
 //TODO validation[m
 module.exports = ({authenticatorService, logger, errors}) => {[m
[31m-    const router = Router({mergeParams: true});[m
[32m+[m	[32mconst router = Router({mergeParams: true});[m
 [m
 	/**[m
 	 * @apiDescription Register user with role USER[m
[36m@@ -13,24 +13,24 @@[m [mmodule.exports = ({authenticatorService, logger, errors}) => {[m
 	 * @apiGroup Registration[m
 	 * @apiParam {Object} user object[m
 	 */[m
[31m-    router.post('/registration', wrap(async (req, res) => {[m
[31m-        const serverPath = req.protocol + '://' + req.get('host');[m
[32m+[m	[32mrouter.post('/registration', wrap(async (req, res) => {[m
[32m+[m		[32mconst serverPath = req.protocol + '://' + req.get('host');[m
 [m
[31m-        sender(res, await authenticatorService.registration(req.body, serverPath))[m
[31m-    }));[m
[32m+[m		[32msender(res, await authenticatorService.registration(req.body, serverPath))[m
[32m+[m	[32m}));[m
 [m
[31m-    router.get('/confirm', wrap(async (req, res) => {[m
[31m-        if (!req.query.token) {[m
[31m-            sender(res, {message: "Set token"}, 405);[m
[31m-            return;[m
[31m-        }[m
[32m+[m	[32mrouter.get('/confirm', wrap(async (req, res) => {[m
[32m+[m		[32mif (!req.query.token) {[m
[32m+[m			[32msender(res, {message: "Set token"}, 405);[m
[32m+[m			[32mreturn;[m
[32m+[m		[32m}[m
 [m
[31m-        const result = await authenticatorService.confirmRegistration(req.query.token);[m
[31m-        if (result.success)[m
[31m-            res.redirect('/');[m
[31m-        else[m
[31m-            sender(res,result);[m
[31m-    }));[m
[32m+[m		[32mconst result = await authenticatorService.confirmRegistration(req.query.token);[m
[32m+[m		[32mif (result.success)[m
[32m+[m			[32mres.redirect('/');[m
[32m+[m		[32melse[m
[32m+[m			[32msender(res, result);[m
[32m+[m	[32m}));[m
 [m
 	/**[m
 	 * @apiDescription Authentication by email and password[m
[36m@@ -39,12 +39,12 @@[m [mmodule.exports = ({authenticatorService, logger, errors}) => {[m
 	 * @apiGroup Registration[m
 	 * @apiParam {Object} loginObj email and password[m
 	 */[m
[31m-    router.post('/login',[m
[31m-        authenticatorService.login(),[m
[31m-        (req, res) => {[m
[31m-            logger.trace(`passport/login -> ${req.user.email}[${req.user.role}] authenticated`);[m
[31m-            sender(res,{id: req.user.id, role: req.user.role, name: req.user.name});[m
[31m-        });[m
[32m+[m	[32mrouter.post('/login',[m
[32m+[m		[32mauthenticatorService.login(),[m
[32m+[m		[32m(req, res) => {[m
[32m+[m			[32mlogger.trace(`passport/login -> ${req.user.email}[${req.user.role}] authenticated`);[m
[32m+[m			[32msender(res, {id: req.user.id, role: req.user.role, name: req.user.name});[m
[32m+[m		[32m});[m
 [m
 	/**[m
 	 * @apiDescription Check auth by cookie. return true if there a session by passed cookie[m
[36m@@ -52,9 +52,9 @@[m [mmodule.exports = ({authenticatorService, logger, errors}) => {[m
 	 *[m
 	 * @apiGroup CheckAuth[m
 	 */[m
[31m-    router.post('/check-auth', (req, res) => {[m
[31m-        res.json({success: req.isAuthenticated(), user: req.user});[m
[31m-    });[m
[32m+[m	[32mrouter.post('/check-auth', (req, res) => {[m
[32m+[m		[32mres.json({success: req.isAuthenticated(), user: req.user});[m
[32m+[m	[32m});[m
 [m
 	/**[m
 	 * @apiDescription Destroy session[m
[36m@@ -62,14 +62,17 @@[m [mmodule.exports = ({authenticatorService, logger, errors}) => {[m
 	 *[m
 	 * @apiGroup Logout[m
 	 */[m
[31m-    router.post('/logout', (req, res) => {[m
[31m-        if (!req.isAuthenticated())[m
[31m-            throw errors.unauthorized;[m
[32m+[m	[32mrouter.post('/logout', (req, res) => {[m
[32m+[m		[32mif (!req.isAuthenticated())[m
[32m+[m			[32mthrow errors.unauthorized;[m
 [m
[31m-        logger.trace(`passport/logout -> ${req.user.email}[${req.user.role}] logout from system`);[m
[31m-        req.logout();[m
[31m-        sender(res);[m
[31m-    });[m
[32m+[m		[32mlogger.trace(`passport/logout -> ${req.user.email}[${req.user.role}] logout from system`);[m
[32m+[m		[32mres.cookie('lastRecommendationUpdated', Date.now(), {[m
[32m+[m			[32mmaxAge: 0,[m
[32m+[m		[32m});[m
[32m+[m		[32mreq.logout();[m
[32m+[m		[32msender(res);[m
[32m+[m	[32m});[m
 [m
[31m-    return router;[m
[32m+[m	[32mreturn router;[m
 };[m
[1mdiff --git a/controllers/routes/actor.controller.js b/controllers/routes/actor.controller.js[m
[1mindex 3d4a396..617a096 100644[m
[1m--- a/controllers/routes/actor.controller.js[m
[1m+++ b/controllers/routes/actor.controller.js[m
[36m@@ -2,16 +2,29 @@[m [mconst CrudController = require('./crud.controller');[m
 const sender = require('../../helpers/sender.helper');[m
 [m
 class ActorController extends CrudController {[m
[31m-    constructor({actorService, cacheService}) {[m
[32m+[m[32m    constructor({actorService, cacheService, statisticsGlobal}) {[m
         super(actorService, 'actor', cacheService);[m
 [m
         this.getMovies = this.getMovies.bind(this);[m
 [m
         this.routes['/:actorId/get-movies'] = [{method: 'get', cb: this.getMovies}];[m
 [m
[31m-        this.registerRoutes();[m
[32m+[m	[32m    this.router.use(statisticsGlobal);[m
[32m+[m
[32m+[m	[32m    this.registerRoutes();[m
     }[m
 [m
[32m+[m	[32masync readAll(req, res) {[m
[32m+[m		[32mconst data = await this.service.readChunk(req.query);[m
[32m+[m
[32m+[m		[32mif(req.recomendations){[m
[32m+[m			[32mdata.recommendations = req.recommendations[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mthis.cacheService.set(req, {success: true, payload: data});[m
[32m+[m		[32msender(res, data);[m
[32m+[m	[32m}[m
[32m+[m
 	/**[m
 	 * @apiDescription Get the list of films in which the actor participates[m
 	 * @api {get} /:actorId/get-movies[m
[1mdiff --git a/controllers/routes/movie.controller.js b/controllers/routes/movie.controller.js[m
[1mindex ad49e72..1fd16be 100644[m
[1m--- a/controllers/routes/movie.controller.js[m
[1m+++ b/controllers/routes/movie.controller.js[m
[36m@@ -8,7 +8,7 @@[m [mclass MovieController extends CrudController {[m
 	 * @param {CacheService} cacheService[m
 	 * @param {UserGenreStatisticsService} userGenreStatisticsService[m
 	 */[m
[31m-	constructor({movieService, cacheService, userGenreStatisticsService}) {[m
[32m+[m	[32mconstructor({movieService, cacheService, userGenreStatisticsService, statisticsGlobal}) {[m
 		super(movieService, 'movie', cacheService);[m
 [m
 		this.userGenreStatisticsService = userGenreStatisticsService;[m
[36m@@ -17,9 +17,23 @@[m [mclass MovieController extends CrudController {[m
 			{method: 'get', cb: this.read}[m
 		];[m
 [m
[32m+[m		[32mthis.router.use(statisticsGlobal);[m
[32m+[m
 		this.registerRoutes();[m
 	}[m
 [m
[32m+[m
[32m+[m	[32masync readAll(req, res) {[m
[32m+[m		[32mconst data = await this.service.readChunk(req.query);[m
[32m+[m
[32m+[m		[32mif(req.recommendations){[m
[32m+[m			[32mdata.recommendations = req.recommendations[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mthis.cacheService.set(req, {success: true, payload: data});[m
[32m+[m		[32msender(res, data);[m
[32m+[m	[32m}[m
[32m+[m
 	async read(req, res) {[m
 		const data = await this.service.read(req.params[this.paramName]);[m
 [m
[1mdiff --git a/db/audit/models/genre.statistics.js b/db/audit/models/genre.statistics.js[m
[1mindex d170f70..fbc7ecd 100644[m
[1m--- a/db/audit/models/genre.statistics.js[m
[1m+++ b/db/audit/models/genre.statistics.js[m
[36m@@ -1,9 +1,4 @@[m
 module.exports = (Sequelize, sequelize) => sequelize.define('genre_statistics', {[m
[31m-	id: {[m
[31m-		type: Sequelize.INTEGER,[m
[31m-		primaryKey: true,[m
[31m-		autoIncrement: true[m
[31m-	},[m
 	userId: Sequelize.INTEGER,[m
 	genreId: Sequelize.INTEGER,[m
 	count: {[m
[1mdiff --git a/global-middlewares/authenticator.global.js b/global-middlewares/authenticator.global.js[m
[1mindex e04fa98..1825f00 100644[m
[1m--- a/global-middlewares/authenticator.global.js[m
[1m+++ b/global-middlewares/authenticator.global.js[m
[36m@@ -2,6 +2,7 @@[m [mconst wrap = require('../helpers/wrap.helper');[m
 [m
 module.exports = ({errors}) => wrap(async (req, res, next) => {[m
     if (req.isAuthenticated() || req.method === 'GET') {[m
[32m+[m
         next();[m
         return;[m
     }[m
[1mdiff --git a/global-middlewares/statistics.global.js b/global-middlewares/statistics.global.js[m
[1mindex e69de29..8df5abb 100644[m
[1m--- a/global-middlewares/statistics.global.js[m
[1m+++ b/global-middlewares/statistics.global.js[m
[36m@@ -0,0 +1,26 @@[m
[32m+[m[32mconst wrap = require('../helpers/wrap.helper');[m
[32m+[m
[32m+[m[32mmodule.exports = ({config, userGenreStatisticsService}) => wrap(async (req, res, next) => {[m
[32m+[m
[32m+[m	[32mconst {user} = req;[m
[32m+[m	[32mif (user && req.method === 'GET') {[m
[32m+[m		[32mconst recommendationsUpdateTimeout = config.recommendationsUpdateTimeout;[m
[32m+[m
[32m+[m		[32mconst {lru} = req.cookies;[m
[32m+[m
[32m+[m		[32mif (!lru) {[m
[32m+[m
[32m+[m			[32m// const recommendationsByGenres = await userGenreStatisticsService.generateRecommendations(20);[m
[32m+[m			[32mconst recommendationsByGenres = await userGenreStatisticsService.generateRecommendations(user.id);[m
[32m+[m
[32m+[m			[32mreq.recommendations = recommendationsByGenres;[m
[32m+[m
[32m+[m			[32mres.cookie('lru', Date.now(), {[m
[32m+[m				[32mmaxAge: recommendationsUpdateTimeout * 1000,[m
[32m+[m				[32mhttpOnly: true[m
[32m+[m			[32m});[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mreturn next()[m
[32m+[m[32m});[m
[1mdiff --git a/loader/index.js b/loader/index.js[m
[1mindex 2155b33..aec2a45 100644[m
[1m--- a/loader/index.js[m
[1m+++ b/loader/index.js[m
[36m@@ -1,5 +1,6 @@[m
 const {createContainer, asClass, asValue, asFunction, Lifetime} = require('awilix');[m
 const logger = require('log4js').getLogger();[m
[32m+[m[32mconst config = require('config');[m
 [m
 logger.level = 'trace';[m
 [m
[36m@@ -29,7 +30,8 @@[m [mmodule.exports = () => {[m
 [m
     container.register({[m
         errors: asValue(require('../helpers/errors.helper')),[m
[31m-        logger: asValue(logger),[m
[32m+[m	[32m    logger: asValue(logger),[m
[32m+[m	[32m    config: asValue(config),[m
         Sequelize: asValue(require('sequelize')),[m
         roles: asValue(require('../helpers/roles.helper')),[m
     });[m
[1mdiff --git a/package.json b/package.json[m
[1mindex 0f92e86..5b9707d 100644[m
[1m--- a/package.json[m
[1m+++ b/package.json[m
[36m@@ -23,6 +23,7 @@[m
     "awilix": "^3.0.7",[m
     "babel": "^6.23.0",[m
     "bcryptjs": "^2.4.3",[m
[32m+[m[32m    "better-queue": "^3.8.10",[m
     "body-parser": "^1.18.2",[m
     "config": "^1.30.0",[m
     "cookie-parser": "^1.4.3",[m
[36m@@ -44,6 +45,7 @@[m
     "pg-hstore": "^2.3.2",[m
     "sequelize": "^4.37.6",[m
     "sequelize-querystring": "github:toffick/node-sequelize-querystring",[m
[32m+[m[32m    "shuffle-array": "^1.0.1",[m
     "supertest": "^3.1.0"[m
   },[m
   "devDependencies": {[m
[1mdiff --git a/repositories/statistics.repository.js b/repositories/statistics.repository.js[m
[1mindex 18b6933..1a04177 100644[m
[1m--- a/repositories/statistics.repository.js[m
[1m+++ b/repositories/statistics.repository.js[m
[36m@@ -1,6 +1,8 @@[m
 class StatisticsRepository {[m
[31m-	constructor({contextAudit}) {[m
[32m+[m	[32mconstructor({contextAudit, context}) {[m
 		this.genreStatisticsModel = contextAudit['GenreStatistics'];[m
[32m+[m		[32mthis.moviesModel = context['Movies'];[m
[32m+[m		[32mthis.genresRepository = context['Genres'];[m
 	}[m
 [m
 	/**[m
[36m@@ -20,6 +22,27 @@[m [mclass StatisticsRepository {[m
 			});[m
 	}[m
 [m
[32m+[m	[32mgetUserGenres(userId) {[m
[32m+[m		[32mreturn this.genreStatisticsModel[m
[32m+[m			[32m.findAll({[m
[32m+[m				[32mwhere: {userId},[m
[32m+[m				[32morder: [['count', 'DESC']],[m
[32m+[m				[32mlimit: 5,[m
[32m+[m				[32mraw: true,[m
[32m+[m				[32mattributes: ['genreId', 'count'][m
[32m+[m			[32m})[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32masync getMoviesByGenre(genreId) {[m
[32m+[m		[32mconst genreItem = await this.genresRepository.findOne({where: {id: genreId}});[m
[32m+[m
[32m+[m		[32mif(!genreItem){[m
[32m+[m			[32mreturn null;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn genreItem.getMovies({raw: true});[m
[32m+[m	[32m}[m
[32m+[m
 }[m
 [m
 module.exports = StatisticsRepository;[m
[1mdiff --git a/server.js b/server.js[m
[1mindex ab8c1eb..04ef996 100644[m
[1m--- a/server.js[m
[1m+++ b/server.js[m
[36m@@ -12,11 +12,12 @@[m [mconst tempDataToDb = require('./tempData/tempDataToDb.helper');[m
     // TODO аккуратно ептыль[m
 	const forceFl = false;[m
 	const forceFl_audit = false;[m
[32m+[m
     try {[m
 	    await db.sequelize.sync({force: forceFl});[m
 	    await dbAudit.sequelize.sync({force: forceFl_audit});[m
 [m
[31m-        logger.info(`Database successfully created`);[m
[32m+[m[32m        logger.info(`Database connections was established`);[m
 [m
         if (forceFl) {[m
             await tempDataToDb(db);[m
[1mdiff --git a/services/routes/movie.service.js b/services/routes/movie.service.js[m
[1mindex cd22f8e..f15a957 100644[m
[1m--- a/services/routes/movie.service.js[m
[1m+++ b/services/routes/movie.service.js[m
[36m@@ -2,15 +2,13 @@[m [mconst CrudService = require('./crud.service');[m
 const getPagination = require('../../helpers/pagination.helper');[m
 [m
 class MovieService extends CrudService {[m
[31m-	constructor({context, movieSchema, errors, statisticsRepository}) {[m
[32m+[m	[32mconstructor({context, movieSchema, errors}) {[m
 		super(context['Movies'], movieSchema, errors);[m
 		this.act